name: Full CI with SQL Server and Playwright

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  e2e-test:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          SA_PASSWORD: "YourStrong!Passw0rd"
          ACCEPT_EULA: "Y"
        ports:
          - 1433:1433
        options: >-
          --health-cmd "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourStrong!Passw0rd -Q 'SELECT 1'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Install serve globally
        run: npm install -g serve

      - name: Wait for SQL Server ready
        run: |
          for i in {1..20}; do
            /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "YourStrong!Passw0rd" -Q "SELECT 1" && break
            echo "Waiting for SQL Server..."
            sleep 5
          done

      - name: Create DB and import DATN.sql
        run: |
          /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "YourStrong!Passw0rd" -Q "CREATE DATABASE TestDB"
          /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "YourStrong!Passw0rd" -d TestDB -i Back-end/src/main/resources/DATN.sql

      - name: Build Backend
        working-directory: Back-end
        run: mvn clean install

      - name: Start Backend
        working-directory: Back-end
        env:
          SPRING_PROFILES_ACTIVE: ci
        run: |
          nohup mvn spring-boot:run -Dspring-boot.run.profiles=ci > ../backend.log 2>&1 &

      - name: Print backend log (after 10s)
        run: |
          sleep 10
          cat backend.log || echo "No backend log"

      - name: Install frontend deps
        working-directory: Front-end
        run: npm install --legacy-peer-deps --force

      - name: Build frontend
        working-directory: Front-end
        run: CI='' GENERATE_SOURCEMAP=false npm run build

      - name: Start frontend
        working-directory: Front-end
        run: nohup serve -s build -l 3000 > ../frontend.log 2>&1 &

      - name: Wait for frontend
        run: npx wait-on http://localhost:3000 --timeout 180000

      - name: Wait for backend port
        run: npx wait-on tcp:8080 --timeout 300000

      - name: Install Playwright test deps
        working-directory: Test_project
        run: npm ci

      - name: Install Playwright browsers
        working-directory: Test_project
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        working-directory: Test_project
        run: npx playwright test

      - name: Print backend log (on fail)
        if: failure()
        run: cat backend.log || echo "No backend log"

      - name: Print frontend log (on fail)
        if: failure()
        run: cat frontend.log || echo "No frontend log"

      - name: Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: Test_project/test-reports/
          retention-days: 30
          if-no-files-found: warn

      - name: Upload Playwright trace (on failure)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-trace
          path: Test_project/test-results/
          retention-days: 15
          if-no-files-found: warn
