name: Full CI with SQL Server and Playwright

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  e2e-test:
    runs-on: windows-latest
    timeout-minutes: 25

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Install serve globally
        run: npm install -g serve

      - name: Start SQL Server (Windows built-in)
        run: |
          Start-Service MSSQLSERVER
          sqlcmd -S localhost -U sa -P "Kimtho@123" -Q "SELECT @@VERSION"
        shell: powershell

      - name: Wait for SQL Server ready
        run: |
          for ($i = 0; $i -lt 20; $i++) {
            try {
              sqlcmd -S localhost -U sa -P "Kimtho@123" -Q "SELECT 1"
              break
            } catch {
              echo "Waiting for SQL Server..."
              Start-Sleep -Seconds 5
            }
          }
        shell: powershell

      - name: Create database and import DATN.sql
        run: |
          sqlcmd -S localhost -U sa -P "Kimtho@123" -d Sports -i DATN.sql
        shell: powershell

      - name: Build Backend
        working-directory: Back-end
        run: mvn clean install

      - name: Start Backend
        working-directory: Back-end
        env:
          SPRING_PROFILES_ACTIVE: ci
        run: |
          Start-Process -NoNewWindow -FilePath "mvn" -ArgumentList "spring-boot:run -Dspring-boot.run.profiles=ci" -RedirectStandardOutput ../backend.log -RedirectStandardError ../backend.log
        shell: powershell

      - name: Print backend log (after 10s)
        run: |
          Start-Sleep -Seconds 10
          Get-Content backend.log -Raw
        shell: powershell

      - name: Install frontend dependencies
        working-directory: Front-end
        run: npm install --legacy-peer-deps --force

      - name: Build frontend
        working-directory: Front-end
        run: CI='' GENERATE_SOURCEMAP=false npm run build

      - name: Start frontend
        working-directory: Front-end
        run: |
          Start-Process -NoNewWindow -FilePath "serve" -ArgumentList "-s build -l 3000" -RedirectStandardOutput ../frontend.log -RedirectStandardError ../frontend.log
        shell: powershell

      - name: Wait for frontend
        run: npx wait-on http://localhost:3000 --timeout 180000

      - name: Wait for backend port
        run: npx wait-on tcp:8080 --timeout 300000

      - name: Install Playwright test dependencies
        working-directory: Test_project
        run: npm ci

      - name: Install Playwright browsers
        working-directory: Test_project
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        working-directory: Test_project
        run: npx playwright test

      - name: Print backend log on failure
        if: failure()
        run: Get-Content backend.log -Raw
        shell: powershell

      - name: Print frontend log on failure
        if: failure()
        run: Get-Content frontend.log -Raw
        shell: powershell

      - name: Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: Test_project/test-reports/
          retention-days: 30
          if-no-files-found: warn

      - name: Upload Playwright trace
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-trace
          path: Test_project/test-results/
          retention-days: 15
          if-no-files-found: warn
