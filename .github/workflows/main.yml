name: Full CI - Localhost Test with Playwright

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  e2e-localhost:
    name: Run E2E Test (localhost)
    runs-on: ubuntu-latest
    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          SA_PASSWORD: "YourStrong!Passw0rd"
          ACCEPT_EULA: "Y"
        ports:
          - 1433:1433
        options: >-
          --health-cmd "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourStrong!Passw0rd -Q 'SELECT 1'"
          --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Install serve globally
        run: npm install -g serve

      - name: Wait for SQL Server to be ready
        run: |
          for i in {1..20}; do
            /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "YourStrong!Passw0rd" -Q "SELECT 1" && break
            echo "Waiting for SQL Server..."
            sleep 5
          done

      - name: Import SQL script
        run: |
          /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "YourStrong!Passw0rd" -d master -i Back-end/DATN.sql

      - name: Clear Maven cache to avoid missing JARs
        run: rm -rf ~/.m2/repository

      - name: Build Java Backend
        working-directory: Back-end
        run: mvn clean install

      - name: Start Java Backend with profile 'ci' and devtools disabled
        working-directory: Back-end
        env:
          SPRING_DEVTOOLS_RESTART_ENABLED: false
          SPRING_DEVTOOLS_LIVERELOAD_ENABLED: false
        run: |
          nohup mvn spring-boot:run -Dspring-boot.run.profiles=ci > ../backend.log 2>&1 &

      - name: Check if port 8080 is in use
        run: |
          sleep 5
          lsof -i :8080 || echo "Nothing is listening on port 8080 yet"

      - name: Install frontend deps
        working-directory: Front-end
        run: npm install --legacy-peer-deps --force

      - name: Fix Browserslist warning
        working-directory: Front-end
        run: npx update-browserslist-db@latest || true

      - name: Format frontend with Prettier
        working-directory: Front-end
        run: npx prettier --write .

      - name: Build Frontend
        working-directory: Front-end
        run: CI='' GENERATE_SOURCEMAP=false npm run build

      - name: Check frontend build exists
        working-directory: Front-end
        run: ls -la build || echo "No build folder"

      - name: Start Frontend
        working-directory: Front-end
        run: nohup serve -s build -l 3000 > ../frontend.log 2>&1 &

      - name: Wait for frontend & backend
        run: npx wait-on --http-get --timeout 300000 --verbose http://localhost:3000 http://localhost:8080/api/chatlieu/getAll

      - name: Print backend log (after wait-on)
        if: failure()
        run: cat backend.log || echo "No backend log available"

      - name: Install test deps
        working-directory: Test_project
        run: npm ci

      - name: Install Playwright browsers
        working-directory: Test_project
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        working-directory: Test_project
        run: npx playwright test

      - name: Print backend log
        if: failure()
        run: cat backend.log || echo "No backend log"

      - name: Print frontend log
        if: failure()
        run: cat frontend.log || echo "No frontend log"

      - name: Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: Test_project/test-reports/
          retention-days: 30
          if-no-files-found: warn

      - name: Upload Playwright trace (on failure)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-trace
          path: Test_project/test-results/
          retention-days: 15
          if-no-files-found: warn
